blueprint:
  name: Auto Updates
  description: Provides automatic updates.
  domain: automation
  input:
    update_entities_immediate:
      name: Update Entities (Immediate)
      description: The update entities to automatically update. These are updated as soon as an update is available.
      default: []
      selector:
        entity:
          filter:
            - domain:
                - update
          multiple: true
    update_entities_given_time:
      name: Update Entities (Given Time)
      description: The update entities to automatically update. These are updated at the update time given below.
      default: []
      selector:
        entity:
          filter:
            - domain:
                - update
          multiple: true
    update_time:
      name: Update Time
      description: The time at which updates will be completed.
      default: 02:00:00
      selector:
        time: {}
    restart_after_updating:
      name: Restart After Updating (Given Time)
      description: Restart Home Assistant after updating entities at the time given.
      default: false
      selector:
        boolean: {}
  source_url: https://github.com/Excentyl/ha-blueprints/blob/main/auto_updates.yaml
variables:
  update_entities_immediate_var: !input update_entities_immediate
  update_entities_given_time_var: !input update_entities_given_time
  restart_after_updating_var: !input restart_after_updating
mode: single
max_exceeded: silent
trigger:
  - platform: state
    entity_id: !input update_entities_immediate
    to: "on"
  - platform: time
    at: !input update_time
    id: update_time
condition: []
action:
  - repeat:
      for_each:
        "{{ update_entities_immediate_var | select('is_state', 'on') | list
        }}"
      sequence:
        - action: update.install
          continue_on_error: true
          target:
            entity_id: "{{ repeat.item }}"
  - if:
      - condition: trigger
        id: update_time
    then:
      - variables:
          updates_required:
            "{{ update_entities_given_time_var | select('is_state',
            'on') | list }}"
      - repeat:
          for_each: "{{ updates_required }}"
          sequence:
            - action: update.install
              continue_on_error: true
              target:
                entity_id: "{{ repeat.item }}"
      - if:
          - condition: template
            value_template:
              "{{ restart_after_updating_var and (updates_required | select('is_state',
              'off') | list | count > 0) }}"
        then:
          - action: homeassistant.restart
