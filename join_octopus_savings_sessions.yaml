blueprint:
  name: Join Octopus Savings Sessions
  description: Automatically joins Octopus Savings Sessions
  domain: automation
  input:
    savings_session_event_entity:
      name: Savings Session Event Entity
      description: This is the savings event entity.
      selector:
        entity:
          filter:
            - domain: event
              integration: octopus_energy
variables:
  savings_session_event_entity_var: !input "savings_session_event_entity"
mode: restart
trigger:
  - platform: state
    entity_id: !input "savings_session_event_entity"
condition: []
action:
  - if:
      - condition: template
        value_template: "{{ state_attr(savings_session_event_entity_var, 'available_events') | length > 0 }}"
    then:
      - repeat:
          sequence:
            - service: notify.notify
              data:
                title: Upcoming Saving Session
                message: >-
                  {% for saving_session in
                  state_attr(savings_session_event_entity_var, 'available_events') %}
                    {% if saving_session.id == repeat.item %}
                      {{ 'Running from ' + (saving_session.start | string) + ' until ' + (saving_session.end | string) + ', earn ' + (saving_session.octopoints_per_kwh | string) + ' Octopoints per kWh saved.' }}
                      {% break %}
                    {% endif %}
                  {% endfor %}
                data:
                  group: Upcoming Saving Session
                  notification_icon: mdi:home-lightning-bolt
              enabled: true
            - service: octopus_energy.join_octoplus_saving_session_event
              data:
                event_code: >-
                  {% for saving_session in
                  state_attr(savings_session_event_entity_var, 'available_events') %}
                    {% if saving_session.id == repeat.item %}
                      {{ saving_session.code }}
                      {% break %}
                    {% endif %}
                  {% endfor %}
              target:
                entity_id: !input "savings_session_event_entity"
              enabled: true
          for_each: >
            {% set ns = namespace(saving_sessions = []) %}
            {% for saving_session in state_attr(savings_session_event_entity_var, 'available_events') %}
              {% set ns.saving_sessions = ns.saving_sessions + [saving_session.id] %}
            {% endfor %}
            {{ ns.saving_sessions }}
