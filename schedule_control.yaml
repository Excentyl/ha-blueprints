blueprint:
  name: Schedule Control
  description: Controls a schedie entity using an alarm control panel, occupancy boolean and a schedule always on binary sensor.
  domain: automation
  input:
    schedule:
      name: Schedule
      description: This is the schedule entity which controls which is being controlled.
      selector:
        entity:
          filter:
            - integration: scheduler
          multiple: false
    controlling_entity:
      name: Controlling Entity
      description: If enabled, the schedule will be turned on or off when this entity is turned on or off.
      default: []
      selector:
        entity:
          multiple: false
    enable_schedule_sensors:
      name: Enable Schedule Sensors
      description: If populated, the schedule will only be enabled when one of these sensors are turned on.
      default: []
      selector:
        entity:
          filter:
            - domain:
                - binary_sensor
                - input_boolean
          multiple: true
    schedule_off_action:
      name: Schedule Off Action
      description: This is the optional action which will run when the schedule is turned off.
      default: []
      selector:
        action: {}
  source_url: https://github.com/Excentyl/ha-blueprints/blob/main/schedule_control.yaml
variables:
  schedule_off_action_var: !input schedule_off_action
  enable_schedule_sensors_var: !input enable_schedule_sensors
mode: queued
max_exceeded: silent
trigger:
  - platform: state
    entity_id: !input controlling_entity
    to: "off"
    id: controlling_entity_off
  - platform: state
    entity_id: !input controlling_entity
    from: "off"
    id: controlling_entity_on
  - platform: state
    entity_id: !input enable_schedule_sensors
    not_to:
      - unknown
      - unavailable
  - platform: state
    entity_id: !input schedule
    to: "off"
    id: schedule_off
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: controlling_entity_off
        sequence:
          - action: switch.turn_off
            target:
              entity_id: !input schedule
      - conditions:
          - condition: trigger
            id: controlling_entity_on
        sequence:
          - action: switch.turn_on
            target:
              entity_id: !input schedule
      - conditions:
          - condition: trigger
            id: schedule_off
        sequence:
          - if:
              - condition: template
                value_template: "{{ schedule_off_action_var != [] }}"
            then: !input schedule_off_action
    default:
      - if:
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ enable_schedule_sensors_var == [] }}"
              - condition: state
                entity_id: !input enable_schedule_sensors
                state: "on"
                match: any
        then:
          - action: switch.turn_on
            target:
              entity_id: !input schedule
        else:
          - action: switch.turn_off
            target:
              entity_id: !input schedule
